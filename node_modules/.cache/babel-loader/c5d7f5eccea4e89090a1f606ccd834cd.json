{"ast":null,"code":"var _jsxFileName = \"/home/kev/springboard/exercises/react-history-demo/react-jokes-classes/src/JokeList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Joke from \"./Joke\";\nimport \"./JokeList.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction JokeList({\n  numJokesToGet = 10\n}) {\n  _s();\n  const [jokes, setJokes] = useState([]);\n\n  /* get jokes if there are no jokes */\n\n  useEffect(function () {\n    async function getJokes() {\n      let j = [...jokes];\n      let seenJokes = new Set();\n      try {\n        while (j.length < numJokesToGet) {\n          let res = await axios.get(\"https://icanhazdadjoke.com\", {\n            headers: {\n              Accept: \"application/json\"\n            }\n          });\n          let {\n            status,\n            ...jokeObj\n          } = res.data;\n          if (!seenJokes.has(jokeObj.id)) {\n            seenJokes.add(jokeObj.id);\n            j.push({\n              ...jokeObj,\n              votes: 0\n            });\n          } else {\n            console.error(\"duplicate found!\");\n          }\n        }\n        setJokes(j);\n      } catch (e) {\n        console.log(e);\n      }\n    }\n    if (jokes.length === 0) getJokes();\n  }, [jokes, numJokesToGet]);\n\n  /* empty joke list and then call getJokes */\n\n  function generateNewJokes() {\n    setJokes([]);\n  }\n\n  /* change vote for this id by delta (+1 or -1) */\n\n  function vote(id, delta) {\n    setJokes(allJokes => allJokes.map(j => j.id === id ? {\n      ...j,\n      votes: j.votes + delta\n    } : j));\n  }\n\n  /* render: either loading spinner or list of sorted jokes. */\n\n  if (jokes.length) {\n    let sortedJokes = [...jokes].sort((a, b) => b.votes - a.votes);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"JokeList\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"JokeList-getmore\",\n        onClick: generateNewJokes,\n        children: \"Get New Jokes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), sortedJokes.map(j => /*#__PURE__*/_jsxDEV(Joke, {\n        text: j.joke,\n        id: j.id,\n        votes: j.votes,\n        vote: vote\n      }, j.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this);\n  }\n  return null;\n}\n_s(JokeList, \"nB/61W1LYUTCSD3Mxe/JmlQbdRQ=\");\n_c = JokeList;\nexport default JokeList;\nvar _c;\n$RefreshReg$(_c, \"JokeList\");","map":{"version":3,"names":["React","useState","useEffect","axios","Joke","jsxDEV","_jsxDEV","JokeList","numJokesToGet","_s","jokes","setJokes","getJokes","j","seenJokes","Set","length","res","get","headers","Accept","status","jokeObj","data","has","id","add","push","votes","console","error","e","log","generateNewJokes","vote","delta","allJokes","map","sortedJokes","sort","a","b","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","text","joke","_c","$RefreshReg$"],"sources":["/home/kev/springboard/exercises/react-history-demo/react-jokes-classes/src/JokeList.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Joke from \"./Joke\";\nimport \"./JokeList.css\";\n\nfunction JokeList({ numJokesToGet = 10 }) {\n  const [jokes, setJokes] = useState([]);\n\n  /* get jokes if there are no jokes */\n\n  useEffect(function() {\n    async function getJokes() {\n      let j = [...jokes];\n      let seenJokes = new Set();\n      try {\n        while (j.length < numJokesToGet) {\n          let res = await axios.get(\"https://icanhazdadjoke.com\", {\n            headers: { Accept: \"application/json\" }\n          });\n          let { status, ...jokeObj } = res.data;\n  \n          if (!seenJokes.has(jokeObj.id)) {\n            seenJokes.add(jokeObj.id);\n            j.push({ ...jokeObj, votes: 0 });\n          } else {\n            console.error(\"duplicate found!\");\n          }\n        }\n        setJokes(j);\n      } catch (e) {\n        console.log(e);\n      }\n    }\n\n    if (jokes.length === 0) getJokes();\n  }, [jokes, numJokesToGet]);\n\n  /* empty joke list and then call getJokes */\n\n  function generateNewJokes() {\n    setJokes([]);\n  }\n\n  /* change vote for this id by delta (+1 or -1) */\n\n  function vote(id, delta) {\n    setJokes(allJokes =>\n      allJokes.map(j => (j.id === id ? { ...j, votes: j.votes + delta } : j))\n    );\n  }\n\n  /* render: either loading spinner or list of sorted jokes. */\n\n  if (jokes.length) {\n    let sortedJokes = [...jokes].sort((a, b) => b.votes - a.votes);\n  \n    return (\n      <div className=\"JokeList\">\n        <button className=\"JokeList-getmore\" onClick={generateNewJokes}>\n          Get New Jokes\n        </button>\n  \n        {sortedJokes.map(j => (\n          <Joke text={j.joke} key={j.id} id={j.id} votes={j.votes} vote={vote} />\n        ))}\n      </div>\n    );\n  }\n\n  return null;\n\n}\n\nexport default JokeList;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAO,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExB,SAASC,QAAQA,CAAC;EAAEC,aAAa,GAAG;AAAG,CAAC,EAAE;EAAAC,EAAA;EACxC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;;EAEtC;;EAEAC,SAAS,CAAC,YAAW;IACnB,eAAeU,QAAQA,CAAA,EAAG;MACxB,IAAIC,CAAC,GAAG,CAAC,GAAGH,KAAK,CAAC;MAClB,IAAII,SAAS,GAAG,IAAIC,GAAG,CAAC,CAAC;MACzB,IAAI;QACF,OAAOF,CAAC,CAACG,MAAM,GAAGR,aAAa,EAAE;UAC/B,IAAIS,GAAG,GAAG,MAAMd,KAAK,CAACe,GAAG,CAAC,4BAA4B,EAAE;YACtDC,OAAO,EAAE;cAAEC,MAAM,EAAE;YAAmB;UACxC,CAAC,CAAC;UACF,IAAI;YAAEC,MAAM;YAAE,GAAGC;UAAQ,CAAC,GAAGL,GAAG,CAACM,IAAI;UAErC,IAAI,CAACT,SAAS,CAACU,GAAG,CAACF,OAAO,CAACG,EAAE,CAAC,EAAE;YAC9BX,SAAS,CAACY,GAAG,CAACJ,OAAO,CAACG,EAAE,CAAC;YACzBZ,CAAC,CAACc,IAAI,CAAC;cAAE,GAAGL,OAAO;cAAEM,KAAK,EAAE;YAAE,CAAC,CAAC;UAClC,CAAC,MAAM;YACLC,OAAO,CAACC,KAAK,CAAC,kBAAkB,CAAC;UACnC;QACF;QACAnB,QAAQ,CAACE,CAAC,CAAC;MACb,CAAC,CAAC,OAAOkB,CAAC,EAAE;QACVF,OAAO,CAACG,GAAG,CAACD,CAAC,CAAC;MAChB;IACF;IAEA,IAAIrB,KAAK,CAACM,MAAM,KAAK,CAAC,EAAEJ,QAAQ,CAAC,CAAC;EACpC,CAAC,EAAE,CAACF,KAAK,EAAEF,aAAa,CAAC,CAAC;;EAE1B;;EAEA,SAASyB,gBAAgBA,CAAA,EAAG;IAC1BtB,QAAQ,CAAC,EAAE,CAAC;EACd;;EAEA;;EAEA,SAASuB,IAAIA,CAACT,EAAE,EAAEU,KAAK,EAAE;IACvBxB,QAAQ,CAACyB,QAAQ,IACfA,QAAQ,CAACC,GAAG,CAACxB,CAAC,IAAKA,CAAC,CAACY,EAAE,KAAKA,EAAE,GAAG;MAAE,GAAGZ,CAAC;MAAEe,KAAK,EAAEf,CAAC,CAACe,KAAK,GAAGO;IAAM,CAAC,GAAGtB,CAAE,CACxE,CAAC;EACH;;EAEA;;EAEA,IAAIH,KAAK,CAACM,MAAM,EAAE;IAChB,IAAIsB,WAAW,GAAG,CAAC,GAAG5B,KAAK,CAAC,CAAC6B,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAACb,KAAK,GAAGY,CAAC,CAACZ,KAAK,CAAC;IAE9D,oBACEtB,OAAA;MAAKoC,SAAS,EAAC,UAAU;MAAAC,QAAA,gBACvBrC,OAAA;QAAQoC,SAAS,EAAC,kBAAkB;QAACE,OAAO,EAAEX,gBAAiB;QAAAU,QAAA,EAAC;MAEhE;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EAERV,WAAW,CAACD,GAAG,CAACxB,CAAC,iBAChBP,OAAA,CAACF,IAAI;QAAC6C,IAAI,EAAEpC,CAAC,CAACqC,IAAK;QAAYzB,EAAE,EAAEZ,CAAC,CAACY,EAAG;QAACG,KAAK,EAAEf,CAAC,CAACe,KAAM;QAACM,IAAI,EAAEA;MAAK,GAA3CrB,CAAC,CAACY,EAAE;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAyC,CACvE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAEV;EAEA,OAAO,IAAI;AAEb;AAACvC,EAAA,CAlEQF,QAAQ;AAAA4C,EAAA,GAAR5C,QAAQ;AAoEjB,eAAeA,QAAQ;AAAC,IAAA4C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}